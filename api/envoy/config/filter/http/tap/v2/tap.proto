syntax = "proto3";

// TODO (CEV): fix all of this!!!

package envoy.config.filter.http.tap.v2;
option go_package = "v2";

import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

import "validate/validate.proto";
import "gogoproto/gogo.proto";

// [#protodoc-title: Tap]
// Tap :ref:`configuration overview <config_http_filters_tap>`.

message Tap {
  // The maximum request size that the filter will buffer before the connection
  // manager will stop buffering and return a 413 response.
  google.protobuf.UInt32Value max_request_bytes = 1 [(validate.rules).uint32.gt = 0];

  // The maximum number of seconds that the filter will wait for a complete
  // request before returning a 408 response.
  google.protobuf.Duration max_request_time = 2
      [(validate.rules).duration = {required: true, gt: {}}, (gogoproto.stdduration) = true];
}

message TapPerRoute {
  oneof override {
    option (validate.required) = true;

    // Disable the tap filter for this particular vhost or route.
    bool disabled = 1 [(validate.rules).bool.const = true];

    // Override the global configuration of the filter with this new config.
    Tap tap = 2 [(validate.rules).message.required = true];
  }
}

/*
message Buffer {
  // The maximum request size that the filter will buffer before the connection
  // manager will stop buffering and return a 413 response.
  google.protobuf.UInt32Value max_request_bytes = 1 [(validate.rules).uint32.gt = 0];

  // The maximum number of seconds that the filter will wait for a complete
  // request before returning a 408 response.
  google.protobuf.Duration max_request_time = 2
      [(validate.rules).duration = {required: true, gt: {}}, (gogoproto.stdduration) = true];
}

message Tap {
  // Disable the tap filter.
  bool disabled = 1 [(validate.rules).bool.const = true];

  // TODO (CEV): add this as an option.
  //
  // string filename = 2 [(validate.rules).string = {
  //                       pattern: "^[[:alnum:]]+[-_. [:alnum:]]*$",
  //                       max_bytes: 1024,
  //                     }];
}
*/
